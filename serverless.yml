service: ping

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-central-1
  stage: ${opt:stage, 'dev'}
  environment:
    SERVER_URL: ${file(./env/${self:provider.stage}.json):serverUrl}

functions:
  auth:
    handler: lambdas/auth.handler
    cors: true

  pingServices:
    handler: lambdas/pingServices.handler
    events:
      - schedule: rate(1 minute)

  getPings:
    handler: lambdas/getPings.handler
    events:
      - http:
          path: getPings
          method: get
          authorizer: auth
          cors: true

  addEndpoint:
    handler: lambdas/addEndpoint.handler
    events:
      - http:
          path: addEndpoint
          method: post
          authorizer: auth
          cors: true

  getEndpoints:
    handler: lambdas/getEndpoints.handler
    events:
      - http:
          path: getEndpoints
          method: get
          authorizer: auth
          cors: true

  deleteEndpoint:
    handler: lambdas/deleteEndpoint.handler
    events:
      - http:
          path: deleteEndpoint
          method: delete
          authorizer: auth
          cors: true

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

plugins:
  - serverless-offline
